//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type TargetStatus string

const (
	TargetStatus_InProgress TargetStatus = "IN_PROGRESS"
	TargetStatus_Completed  TargetStatus = "COMPLETED"
)

func (e *TargetStatus) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "IN_PROGRESS":
		*e = TargetStatus_InProgress
	case "COMPLETED":
		*e = TargetStatus_Completed
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for TargetStatus enum")
	}

	return nil
}

func (e TargetStatus) String() string {
	return string(e)
}
